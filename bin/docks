#!/bin/sh

if [ -e $DEVOPS_SCRIPTS_PATH ]; then
  echo [Warning] If you don't set DEVOPS_SCRIPTS_PATH, you're gonna have a bad time...
fi

nvmscript=""
if command -v brew 2> /dev/null 1>&2; then
  nvmscript="$(brew --prefix nvm)/nvm.sh"
  if [ ! -e "$nvmscript" ]; then
    nvmscript=""
  fi
fi
if [ -e $HOME/.nvm/nvm.sh ]; then
  nvmscript="$HOME/.nvm/nvm.sh"
fi

if [[ $nvmscript != "" ]]; then
  . $nvmscript
  node=$(nvm which 4)
elif command -v n 2> /dev/null 1>&2; then
  node=$(n bin 4.2.2)
else
  echo "Cannot find Node 4 :("
  exit 1
fi

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

exec "$node" "$DIR/_docks.js" "$@"
